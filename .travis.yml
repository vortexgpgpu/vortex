language: cpp
dist: focal
os: linux
compiler: gcc

addons:  
  apt:
    packages:
      - build-essential
      - valgrind
      - libstdc++6

env:
  global:
    - TOOLDIR=$HOME/tools

cache:
  directories:
    - $TOOLDIR

before_install:
  - if [ ! -d "$TOOLDIR" ] || [ -z "$(ls -A $TOOLDIR)" ] || [ "$(cat $TOOLDIR/version.txt)" != "v2" ]; then
      rm -rf $TOOLDIR;
      mkdir -p $TOOLDIR;
      OSDIR=ubuntu/focal ./ci/toolchain_install.sh --all;
      echo "v2" > $TOOLDIR/version.txt
    fi
  - source ./ci/toolchain_env.sh

stages:
  - setup
  - test

jobs:     
  include:
    - stage: setup
      name: build32
      script:
        - mkdir -p build32 && cd build32 && ../configure && make -s > /dev/null
    - stage: setup
      name: build64
      script:
        - mkdir -p build64 && cd build64 && XLEN=64 ../configure && make -s > /dev/null
    - stage: test 
      name: unittest
      script: cd build32 && ./ci/travis_run.py ./ci/regression.sh --unittest
    - stage: test 
      name: isa
      script: cd build32 && ./ci/travis_run.py ./ci/regression.sh --isa
    - stage: test 
      name: isa64
      script: cd build64 && ./ci/travis_run.py ./ci/regression.sh --isa
    - stage: test 
      name: regression
      script: cd build32 && ./ci/travis_run.py ./ci/regression.sh --regression
    - stage: test 
      name: regression64
      script: cd build64 && ./ci/travis_run.py ./ci/regression.sh --regression
    - stage: test 
      name: opencl
      script: cd build32 && ./ci/travis_run.py ./ci/regression.sh --opencl    
    - stage: test 
      name: cluster
      script: cd build32 && ./ci/travis_run.py ./ci/regression.sh --cluster    
    - stage: test 
      name: config
      script: cd build32 && ./ci/travis_run.py ./ci/regression.sh --config
    - stage: test
      name: debug
      script: cd build32 && ./ci/travis_run.py ./ci/regression.sh --debug
    - stage: test 
      name: stress0
      script: cd build32 && ./ci/travis_run.py ./ci/regression.sh --stress0
    - stage: test 
      name: stress1
      script: cd build32 && ./ci/travis_run.py ./ci/regression.sh --stress1
    - stage: test 
      name: synthesis
      script: cd build32 && ./ci/travis_run.py ./ci/regression.sh --synthesis
    - stage: test 
      name: synthesis64
      script: cd build64 && ./ci/travis_run.py ./ci/regression.sh --synthesis
            
after_success:
  # Gather code coverage
  - lcov --directory runtime --capture --output-file runtime.cov # capture trace  
  - lcov --directory sim --capture --output-file sim.cov # capture trace    
  - lcov --list runtime.cov # output coverage data for debugging
  - lcov --list sim.cov # output coverage data for debugging
  # Upload coverage report
  - bash <(curl -s https://codecov.io/bash) -f runtime.cov
  - bash <(curl -s https://codecov.io/bash) -f sim.cov
